@model EncuestasRC.ViewModels.SurveyCompletedViewModel

@{
    var index = 0;
    ViewBag.Title = "Encuesta Completada";

    var orderNo = "";
    var orderType = "";

    if (Model.surveyHeader.OrderNo.Split('-').Length > 1)
    {
        orderNo = Model.surveyHeader.OrderNo.Split('-')[0];
        orderType = Model.surveyHeader.OrderNo.Split('-')[1];
    }
}

<div class="text-center">
    <h2 class="bg-dark text-light rounded pl-2">@Model.Title</h2>
    <input type="hidden" id="surveyId" name="SurveyId" value="@Model.surveyHeader.SurveyId" />
    <input type="hidden" id="sessionRole" name="sessionRole" value="@Session["role"].ToString()" />
</div>

<div class="mt-5" id="surveyDiv">
    <div class="row mb-4">
        <div class="col-12">
            <div class="form-row">
                <div class="col-2">
                    <label class="col-form-label col-form-label-sm">Fecha</label>
                </div>

                <div class="col-2">
                    <input type="text" id="surveyDate" name="surveyDate" value="@Model.surveyHeader.SurveyEnded.Value.Date.ToString("dd/MM/yyyy")" class="datepicker form-control form-control-sm" autocomplete="off" readonly />
                </div>
            </div>
        </div>

        <div class="col-12 mt-1">
            <div class="form-row align-items-center">
                <div class="col-2">
                    <label class="col-form-label col-form-label-sm">Orden</label>
                </div>
                <div class="col-2">
                    <input autocomplete="off" class="form-control form-control-sm" id="orderNo" name="orderNo" placeholder="Orden No." type="text" value="@orderNo" />
                    <input autocomplete="off" class="form-control form-control-sm" id="orderType" name="orderType" placeholder="Tipo de Orden" type="text" value="@orderType" />
                </div>
                <div class="col-1">
                    <a class="btn btn-sm btn-info" href="javascript:void(0)" id="btnSearchOrder" title="Buscar" style="margin-top: 1px">
                        <i class="fa fa-search"></i>
                    </a>
                </div>
            </div>
        </div>

        <div class="col-12 mt-1">
            <div class="form-row">
                <div class="col-2">
                    <label class="col-form-label col-form-label-sm">Cliente</label>
                </div>

                <div class="col-4">
                    <input type="text" id="customer" name="customer" value="@Model.surveyHeader.Customer" class="form-control form-control-sm" />
                </div>
            </div>
        </div>

        <div class="col-12 mt-1">
            <div class="form-row">
                <div class="col-2">
                    <label class="col-form-label col-form-label-sm">Tipo</label>
                </div>
                <div class="col-2">
                    <select id="customerType" name="customerType" class="form-control form-control-sm" style="min-width: 280px">
                        <option value="0">--Seleccionar--</option>
                        <option value="1">Minorista</option>
                        <option value="2">Mayorista</option>
                        <option value="3">Clave</option>
                        <option value="4">Esporádico</option>
                        <option value="5">Centro de Servicios</option>
                    </select>
                </div>
            </div>
        </div>

        <div class="col-12">
            <div class="form-row">
                <div class="col-2">
                    <label class="col-form-label col-form-label-sm">Fecha de Cierre</label>
                </div>

                <div class="col-2">
                    <input type="text" id="closeDate" name="closeDate" value="@(Model.surveyHeader.CloseDate?.ToString("dd/MM/yyyy"))" class="form-control form-control-sm" autocomplete="off" disabled />
                </div>
            </div>
        </div>
        
        <div class="col-12 mt-1">
            <div class="form-row">
                <div class="col-2">
                    <label class="col-form-label col-form-label-sm">Fecha de Entrega</label>
                </div>

                <div class="col-2">
                    <input type="text" id="deliveryDate" name="deliveryDate" value="@(Model.surveyHeader.DeliveryDate?.ToString("dd/MM/yyyy"))" class="form-control form-control-sm" autocomplete="off" disabled />
                </div>
            </div>
        </div>

    </div>

    @foreach (var item in ViewBag.Questions)
    {
        <p class="font-weight-bold bg-light pl-1" id="question@(index)">@(index + 1)-@item.QuestionTitle</p>

        <table cellpadding="8" class="mb-4">

            <tbody>
                <tr>
                    @foreach (var answer in item.Answers)
                    {
                        var selectedAnswer = Model.surveyDetail.FirstOrDefault(c => c.QuestionId == item.QuestionId && c.AnswerId == answer.Id) != null ? "checked" : "";

                        <td>
                            <input type="radio" name="question@(index)" id="@item.QuestionId" value="@answer.Id" data-bind="@answer.Points"
                                   @(selectedAnswer)> @answer.Title
                            </td>
                        }
                </tr>
            </tbody>

        </table>

        index += 1;
    }

    <div class="form-group">
        <label for="comments"><b>Comentarios</b></label>
        <textarea class="form-control col-12" id="comments" rows="3">@Model.surveyHeader.Comments</textarea>
    </div>

    <div class="mt-2 mb-2">
        <h3>Resultado: @ViewBag.result%</h3>
    </div>

    <button class="btn btn-secondary pl-5 pr-5 mt-2" id="btnBack" onclick="history.back()">Regresar</button>

    @{
        if (Session["role"] != null && Session["role"].ToString() == "Admin2")
        {
            <button class="btn btn-info pl-5 pr-5 mt-2" id="btnSaveSurvey">Guardar</button>
            <button class="btn btn-danger pl-5 pr-5 mt-2" id="btnRemove">Eliminar</button>
        }
    }

</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">

    function goBack() {
        const mainSurvey = window.location.href.split("/").pop().split("=")[2];
        window.location = `/survey/CompletedSurveys/${mainSurvey}`;
    }

    const saveSurvey = (id, surveyId, customer, customerType, orderNo, date, comments, closeDate, deliveryDate) => {
        const formattedDate = GetDateFormat(date);
        const deliveryDateFormatted = deliveryDate ? GetDateFormat(deliveryDate) : null;
        const closeDateFormatted = closeDate ? GetDateFormat(closeDate) : null;

        const url = `/Survey/SaveSurveyHeader?id=${id}&surveyId=${surveyId}&customer=${customer}&customerType=${customerType}&orderNo=${orderNo}&date=${formattedDate}&comments=${comments}&closeDate=${closeDateFormatted}&deliveryDate=${deliveryDateFormatted}`

        $.ajax({
            "url": url,
            "type": "POST",
            "success": async function (response) {
                if (response.result === "200") {

                    console.log('header saved')
                    const surveyHeaderId = response.message

                    for (let index = 0; index < @index; index++) {
                        if ($(`input[name='question${index}']:checked`).val() !== undefined) {
                            const questionId = $(`input[name='question${index}']:checked`).attr("id")
                            const answerId = $(`input[name='question${index}']:checked`).attr("value")
                            const points = $(`input[name='question${index}']:checked`).attr("data-bind")

                            await saveSurveyDetail(surveyHeaderId, questionId, answerId, points)

                            $("#surveyDiv :input[type=text]").prop("disabled", true);
                            $("#customerType").prop("disabled", true);
                            $(':radio:not(:checked)').attr('disabled', true);
                            $("#btnSearchOrder").addClass("button-disabled");
                            $("#btnSaveSurvey").addClass("button-disabled");
                            $("#successSurvey").fadeIn();
                        }
                    }

                    alert("Los cambios fueron guardados!");
                    goBack();

                    $("#btnSaveSurvey").removeAttr('disabled')

                } else {
                    console.log(response.message);
                    $("#btnSaveSurvey").removeAttr('disabled')
                    alert('Hubo un error tratando de guardar la respuesta.');
                }
            }
        });
    }

    const saveSurveyDetail = async (surveyHeaderId, questionId, answerId, points) => {
        const url = `/Survey/SaveSurveyDetail?surveyHeaderId=${surveyHeaderId}&questionId=${questionId}&answerId=${answerId}&points=${points}`

        $.ajax({
            "url": url,
            "type": "POST",
            "success": async function (response) {
                if (response.result === "200") {

                    console.log('detail saved')
                    $("#btnSaveSurvey").removeAttr('disabled')

                } else {
                    console.log(response.message);
                    $("#btnSaveSurvey").removeAttr('disabled')
                    alert('Hubo un error tratando de guardar la respuesta.');
                }
            }
        });
    }

    $(document).ready(function () {

        $(".numericOnly").keypress(function (e) {
            if (String.fromCharCode(e.keyCode).match(/[^0-9]/g)) return false
        });

        if ($("#sessionRole").val() !== "Admin2") {
            $("#surveyDiv :input[type=text]").prop("disabled", true);
            $("#customerType").prop("disabled", true);
            $(':radio:not(:checked)').attr('disabled', true);
        }

        $("#customerType").val(@Model.surveyHeader.CustomerType);

        $("#btnRemove").click(function (evt) {
            evt.preventDefault();
            const id = window.location.href.split("/").pop().split("?")[0];

            if (confirm(`Favor confirmar que desea eliminar la encuesta #${id}`)) {
                $.ajax({
                    "url": `/Survey/RemoveCompletedSurvey?id=${id}`,
                    "type": "POST",
                    "success": async function (response) {
                        if (response.result === "200") {
                            alert(`Encuesta #${id} fue eliminada con exito!`);
                            goBack();
                        } else {
                            console.log(response.message);
                            alert('Hubo un error tratando de eliminar la encuesta.');
                        }
                    }
                });
            }
        });

        $("#btnSearchOrder").click(function (e) {
            e.preventDefault();
            let order = $("#orderNo").val();
            const orderType = $("#orderType").val();

            order = `${order}-${orderType}`;

            if (order) {
                $.ajax({
                    "url": `/Survey/CustomerNameForOrder?order=${order}`,
                    "type": "POST",
                    "success": async function (response) {
                        console.log('response:', response);

                        if (response.result === "200" || response.result === "404") {

                            $("#customer").val(response.message);

                            if (response.result === "200") {
                                const results = response.message.split("|");

                                $("#customer").val(results[0]);
                                $("#orderType").val(`${results[1]}`);
                                $("#orderNo").val(`${results[2]}`);
                                $("#closeDate").val(`${results[3]}`);
                                $("#deliveryDate").val(`${results[4]}`);
                            }
                        } else {
                            console.log(response.message);
                            alert('Hubo un error tratando de consultar la orden.');
                        }
                    }
                });
            }
        });

        $("#btnSaveSurvey").click(async function (e) {
            e.preventDefault()

            $("#btnSaveSurvey").attr('disabled', 'disabled')

            const id = window.location.href.split("/").pop().split("?")[0];
            const surveyId = $("#surveyId").val();
            const customer = $("#customer").val();
            const customerType = $("#customerType").val();
            const orderNo = $("#orderNo").val();
            const orderType = $("#orderType").val()
            const date = $(".datepicker").val();
            const comments = $("#comments").val();

            const closeDate = $("#closeDate").val();
            const deliveryDate = $("#deliveryDate").val();

            const orderNoType = `${orderNo}-${orderType}`;
            await saveSurvey(id, surveyId, customer, customerType, orderNoType, date, comments, closeDate, deliveryDate);
        });
    });

    function GetDateFormat(date) {
        if (navigator.languages != null && navigator.languages[0].includes("es")) {
            const parts = date.split("/");
            const dt = new Date(parseInt(parts[2], 10),
                parseInt(parts[1], 10) - 1,
                parseInt(parts[0], 10));

            return dt.toLocaleString("en-US")
        } else {
            const parts = date.split("/");
            const dt = new Date(parseInt(parts[2], 10),
                parseInt(parts[1], 10) - 1,
                parseInt(parts[0], 10));

            return dt.toLocaleDateString();
        }
    }

</script>
